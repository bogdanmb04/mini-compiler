//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Facultate/Licenta/An_II/Sem_I/LFC/ANTLR/Program/Program/myGrammar.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="myGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ImyGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] myGrammarParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] myGrammarParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.mainFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMainFunction([NotNull] myGrammarParser.MainFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVariable([NotNull] myGrammarParser.GlobalVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] myGrammarParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.controlBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControlBlock([NotNull] myGrammarParser.ControlBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.ifElseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfElseBlock([NotNull] myGrammarParser.IfElseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBlock([NotNull] myGrammarParser.IfBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseBlock([NotNull] myGrammarParser.ElseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.forBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForBlock([NotNull] myGrammarParser.ForBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileBlock([NotNull] myGrammarParser.WhileBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInit([NotNull] myGrammarParser.ForInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.forUpdate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForUpdate([NotNull] myGrammarParser.ForUpdateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondition([NotNull] myGrammarParser.ForConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] myGrammarParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] myGrammarParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] myGrammarParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] myGrammarParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] myGrammarParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] myGrammarParser.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.increment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrement([NotNull] myGrammarParser.IncrementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.decrement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrement([NotNull] myGrammarParser.DecrementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn([NotNull] myGrammarParser.ReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperation([NotNull] myGrammarParser.OperationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.logicalOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOperation([NotNull] myGrammarParser.LogicalOperationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] myGrammarParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.orCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrCondition([NotNull] myGrammarParser.OrConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.andCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndCondition([NotNull] myGrammarParser.AndConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.notCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotCondition([NotNull] myGrammarParser.NotConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtom([NotNull] myGrammarParser.AtomContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] myGrammarParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.compoundAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundAssignment([NotNull] myGrammarParser.CompoundAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.compoundOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundOperator([NotNull] myGrammarParser.CompoundOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.arithmeticOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticOperator([NotNull] myGrammarParser.ArithmeticOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] myGrammarParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] myGrammarParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnType([NotNull] myGrammarParser.ReturnTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataType([NotNull] myGrammarParser.DataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] myGrammarParser.ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] myGrammarParser.ComparisonOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="myGrammarParser.logicalConditionalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalConditionalOperator([NotNull] myGrammarParser.LogicalConditionalOperatorContext context);
}
